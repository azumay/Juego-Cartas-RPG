/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.13
 * Generated at: 2022-02-19 18:17:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.Arrays;
import java.util.List;

public final class RandomCard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

public class personajes {

		int caracFue;
		int caracDes;
		int caracCon;
		int caracInt;
		int caracSab;
		int caracCAR;

		int caracFueMod;
		int caracDesMod;
		int caracConMod;
		int caracIntMod;
		int caracSabMod;
		int caracCARMod;

		int pVida;
		int pMana;
		int modPositivo;
		int modNegativo;
		String img;
		int modificador;
		String nombre;

		// Personajes: Elfs", "Nans", "Gnom", "Mitjans", "Semi-Orc", "humans
		String charElfs;
		String charNans;
		String charGnom;
		String charMitjans;
		String charSemiOrc;
		String charHumans;

		public personajes(int num) {

			this.caracCAR = this.tirarDados6();
			this.caracCon = this.tirarDados6();
			this.caracDes = this.tirarDados6();
			this.caracFue = this.tirarDados6();
			this.caracInt = this.tirarDados6();
			this.caracSab = this.tirarDados6();

			switch (num) {
			case 1:
				this.setCharElf();
				break;
			case 2:
				this.setCharNans();
				break;
			case 3:
				this.setCharGnom();
				break;
			case 4:
				this.setCharMitjans();
				break;
			case 5:
				this.setCharSemiOrc();
				break;
			case 6:
				this.setCharHumans();
				break;
			}
		}

		public int tirarDados6() {
			int mesPetit = 0;
			int cares = 6;
			int suma = 0;
			for (int i = 0; i < 4; i++) {
				int actual = (int) Math.floor(Math.random() * (cares - 1 + 1)) + 1;
				if (mesPetit == 0 || mesPetit > actual)
					mesPetit = actual;
				suma += actual;
			}
			suma -= mesPetit;
			return suma;
		}

		public String getElf() {
			return charElfs;
		}

		public String getCharNans() {
			return charNans;
		}

		public String getCharGnom() {
			return charGnom;
		}

		public String getCharMitjans() {
			return charMitjans;
		}

		public String getCharSemiOrc() {
			return charSemiOrc;
		}

		public String getCharHumans() {
			return charHumans;
		}

		public void setCharElf() {

			this.caracCARMod = this.caracCAR;
			this.caracConMod = this.caracCon - 2;
			this.caracDesMod = this.caracDes + 2;
			this.caracFueMod = this.caracFue;
			this.caracIntMod = this.caracInt + 2;
			this.caracSabMod = this.caracSab;

			this.pVida = this.caracCon * (int) (Math.random() * 8 + 1);
			this.pMana = (this.caracInt + this.caracSab) / 2 * (int) (Math.random() * 4 + 1);
			this.img = "img/0.png";
			this.modPositivo = +2;
			this.modNegativo = -2;
			this.modificador = 0;
			this.nombre = "Elf";

		}

		public void setCharNans() {

			this.caracFueMod = this.caracFue - 2;
			this.caracDesMod = this.caracDes + 2;
			this.caracConMod = this.caracCon;
			this.caracIntMod = this.caracInt;
			this.caracSabMod = this.caracSab;
			this.caracCARMod = this.caracCARMod + 2;

			this.pVida = this.caracCon * (int) (Math.random() * 8 + 1);
			this.pMana = (this.caracInt + this.caracSab) / 2 * (int) (Math.random() * 4 + 1);
			this.img = "img/1.png";
			this.nombre = "Nans";
		}

		public void setCharGnom() {

			this.caracCARMod = this.caracCAR + 2;
			this.caracConMod = this.caracCon + 2;
			this.caracDesMod = this.caracDes;
			this.caracFueMod = this.caracFue - 2;
			this.caracIntMod = this.caracInt;
			this.caracSabMod = this.caracSab;
			this.pVida = this.caracCon * (int) (Math.random() * 8 + 1);
			this.pMana = (this.caracInt + this.caracSab) / 2 * (int) (Math.random() * 4 + 1);
			this.img = "img/2.png";
			this.nombre = "Gnom";
		}

		public void setCharMitjans() {
			this.caracCARMod = this.caracCAR;
			this.caracConMod = this.caracCon;
			this.caracDesMod = this.caracDes + 2;
			this.caracFueMod = this.caracFue - 2;
			this.caracIntMod = this.caracInt;
			this.caracSabMod = this.caracSab;
			this.pVida = this.caracCon * (int) (Math.random() * 8 + 1);
			this.pMana = (this.caracInt + this.caracSab) / 2 * (int) (Math.random() * 4 + 1);
			this.img = "img/3.png";
			this.nombre = "Mitjan";
		}

		public void setCharSemiOrc() {
			this.caracCARMod = this.caracCAR - 2;
			this.caracConMod = this.caracCon;
			this.caracDesMod = this.caracDes;
			this.caracFueMod = this.caracFue + 2;
			this.caracIntMod = this.caracInt - 2;
			this.caracSabMod = this.caracSab;
			this.pVida = this.caracCon * (int) (Math.random() * 8 + 1);
			this.pMana = (this.caracInt + this.caracSab) / 2 * (int) (Math.random() * 4 + 1);
			this.img = "img/4.png";
			this.nombre = "Orc";
		}

		public void setCharHumans() {
			this.caracCARMod = this.caracCAR;
			this.caracConMod = this.tirarDados6();
			this.caracDesMod = this.tirarDados6();
			this.caracFueMod = this.tirarDados6();
			this.caracIntMod = this.tirarDados6();
			this.caracSabMod = this.tirarDados6();
			this.pVida = this.caracCon * (int) (Math.random() * 8 + 1);
			this.pMana = (this.caracInt + this.caracSab) / 2 * (int) (Math.random() * 4 + 1);
			this.img = "img/5.png";
			this.nombre = "Huma";

		}

	}

	public int getDice6() {
		return (int) (Math.random() * 6 + 1);
	}
  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.Arrays");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<link rel=\"icon\" type=\"image/x-icon\" href=\"img/orco.ico\">\n");
      out.write("<title>Random Card - Yamuza Game</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"Estilos/estilosCartaRandom.css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"Estilos/estilosAddCard.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	");

	personajes playerOne = new personajes(getDice6());
	
      out.write("\n");
      out.write("	<div class=\"titulo-cabecera\">\n");
      out.write("		<h2>Generar carta Random</h2>\n");
      out.write("		<img src=\"img/titulo-img.png\">\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<div class=\"botones-control\">\n");
      out.write("		<a href='RandomCard.jsp'>\n");
      out.write("			<button class=\"button-29\" role=\"button\">Generar otra carta</button>\n");
      out.write("		</a> <a href='index.jsp'>\n");
      out.write("			<button class=\"button-29\" role=\"button\">Volver</button>\n");
      out.write("		</a>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<form action=\"insert_bd.jsp\" method=\"post\">\n");
      out.write("		<div class=\"fondo-form\">\n");
      out.write("			<h1>");
      out.print(playerOne.nombre);
      out.write("</h1>\n");
      out.write("			<input type=\"hidden\" name=\"race\" value=");
      out.print(playerOne.nombre);
      out.write(">\n");
      out.write("			<table class=\"tg\" style=\"width: 100%; height: 10%; opacity: 1;\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("				<tbody>\n");
      out.write("					<tr>\n");
      out.write("						<td rowspan=\"8\" style=\"width: 40%;\"><img\n");
      out.write("							src=\"");
      out.print(playerOne.img);
      out.write("\" style=\"width: 80%; height: 390px;\">\n");
      out.write("					<input type=\"hidden\" name=\"picture\" value=\"");
      out.print(playerOne.img);
      out.write("\">		\n");
      out.write("						</td>\n");
      out.write("						<th>Carac.</th>\n");
      out.write("						<th>Valor Base</th>\n");
      out.write("						<th>Mod.</th>\n");
      out.write("						<th>Valor Final</th>\n");
      out.write("\n");
      out.write("					</tr>\n");
      out.write("\n");
      out.write("					<tr>\n");
      out.write("\n");
      out.write("						<td>FUE:</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracFue);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracFueMod - playerOne.caracFue);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracFueMod);
      out.write("</td>\n");
      out.write("						<input type=\"hidden\" name=\"fue\" value=\"");
      out.print(playerOne.caracFueMod);
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td>DES:</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracDes);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracDesMod - playerOne.caracDes);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracDesMod);
      out.write("</td>\n");
      out.write("						<input type=\"hidden\" name=\"des\" value=\"");
      out.print(playerOne.caracDes);
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td>CON:</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracCon);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracConMod - playerOne.caracCon);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracConMod);
      out.write("</td>\n");
      out.write("						<input type=\"hidden\" name=\"con\" value=\"");
      out.print(playerOne.caracConMod);
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td>INT:</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracInt);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracIntMod - playerOne.caracInt);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracIntMod);
      out.write("</td>\n");
      out.write("						<input type=\"hidden\" name=\"int\" value=\"");
      out.print(playerOne.caracConMod);
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td>SAB:</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracSab);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracSabMod - playerOne.caracSab);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracSabMod);
      out.write("</td>\n");
      out.write("						<input type=\"hidden\" name=\"sab\" value=\"");
      out.print(playerOne.caracSabMod);
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td>CAR:</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracCAR);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracCARMod - playerOne.caracCAR);
      out.write("</td>\n");
      out.write("						<td>");
      out.print(playerOne.caracCAR);
      out.write("</td>\n");
      out.write("						<input type=\"hidden\" name=\"car\" value=\"");
      out.print(playerOne.caracCAR);
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td>P.V (");
      out.print(playerOne.pVida);
      out.write(")\n");
      out.write("						</td>\n");
      out.write("						<td colspan=\"3\"><progress id=\"file\" max=\"100\"\n");
      out.write("								value=\"");
      out.print(playerOne.pVida);
      out.write("\"></td>\n");
      out.write("					<input type=\"hidden\" name=\"pv\" value=\"");
      out.print(playerOne.pVida);
      out.write("\">\n");
      out.write("\n");
      out.write("					</tr>\n");
      out.write("					<tr>\n");
      out.write("						<td>Nom: <input type=\"text\" id=\"nom\" name=\"nom\"></td>\n");
      out.write("						<td>P.M (");
      out.print(playerOne.pMana);
      out.write(")\n");
      out.write("						</td>\n");
      out.write("						<td colspan=\"3\"><progress id=\"file\" max=\"100\"\n");
      out.write("								value=\"");
      out.print(playerOne.pMana);
      out.write("\"></td>\n");
      out.write("					<input type=\"hidden\" name=\"pm\" value=\"");
      out.print(playerOne.pMana);
      out.write("\">\n");
      out.write("					</tr>\n");
      out.write("\n");
      out.write("					<td><input type=\"submit\" name=\"submitRegistro\"\n");
      out.write("						value=\"Crear Carta ✅\" class=\"button-29\"></td>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("	</form>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<footer>\n");
      out.write("		<div class=\"contenedor\">\n");
      out.write("			<p class=\"copy\">Xavi Yamuza &copy; 2022</p>\n");
      out.write("		</div>\n");
      out.write("	</footer>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
