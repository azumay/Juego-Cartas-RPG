/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.13
 * Generated at: 2022-02-15 15:40:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.apache.jasper.tagplugins.jstl.core.If;

public final class inicio_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  
	public class Personatge {
		//atributs
		protected String nom;
	    protected String imatge;
	    protected String classe;
	    
	    protected String color1;
	    protected String color2;
	    protected String color3;
	    
	    protected int[] punts;
	    
	    protected int VIDA;
	    protected int MANA;
	    
	    protected int finalFUE;
	    protected int finalDES;
	    protected int finalCON;
	    protected int finalINT;
	    protected int finalSAB;
	    protected int finalCAR;
	    
	    //constructor
	    public Personatge(){
	    	this.punts= new int[6];
	    	int tria = (int)Math.floor(Math.random() * (6-1+1)) + 1;
			if(tria==1){
				this.crearElf();
			}
			else if(tria==2){
				this.crearNan();
			}
			else if(tria==3){
				this.crearGnom();
			}
			else if(tria==4){
				this.crearMitja();
			}
			else if(tria==5){
				this.crearSemiOrc();
			}
			else if(tria==6){
				this.crearHuma();
			}
	    }	
	    public Personatge(int tria){
	    	this.punts= new int[7];
			if(tria==1){
				this.crearElf();
			}
			else if(tria==2){
				this.crearNan();
			}
			else if(tria==3){
				this.crearGnom();
			}
			else if(tria==4){
				this.crearMitja();
			}
			else if(tria==5){
				this.crearSemiOrc();
			}
			else if(tria==6){
				this.crearHuma();
			}
	    }
	    //mètodes
	    private int tirarDaus(int daus){
	    	int mesPetit=0;
	    	int cares=6;
	    	int suma=0;
	    	for(int i =0; i<daus; i++){
	    		int actual = (int)Math.floor(Math.random() * (cares-1+1)) + 1;
	    		if(mesPetit==0 || mesPetit>actual) mesPetit=actual;
	    		suma+=actual;
	    	}
	    	suma-=mesPetit;
	    	return suma;
	    }
	    private int tirarDaus(int daus, int cares){
	    	int suma=0;
	    	for(int i =0; i<daus; i++){
	    		int actual = (int)Math.floor(Math.random() * (cares-1+1)) + 1;
	    		suma+=actual;
	    	}
	    	return suma;
	    }
	    public void crearElf(){
	    	this.imatge="0.png";
			this.classe="Elf";
			
			this.color1="#99bfcd";
			this.color2="#fcf3b0";
			this.color3="#d3ecec";
						
	    }
		public void crearNan(){
			this.imatge="1.png";
			this.classe="Nan";
			
			this.color1="#a67b4f";
			this.color2="#f9b78f";
			this.color3="#62412e";
		}
		public void crearGnom(){
			this.imatge="2.png";
			this.classe="Gnom";
			
			this.color1="#4a8da8";
			this.color2="#FFBBF0";
			this.color3="#b8ae95";
		}
		public void crearMitja(){
			this.imatge="3.png";
			this.classe="Mitjà";

			this.color1="#c2724c";
			this.color2="#d45a76";
			this.color3="#f0d4ba";
		}
		public void crearSemiOrc(){
			this.imatge="4.png";
			this.classe="SemiOrc";

			this.color1="#66747b";
			this.color2="#a4a095";
			this.color3="#bda67c";
		}
		public void crearHuma(){
			this.imatge="5.png";
			this.classe="Humà";

			this.color1="#cab69a";
			this.color2="#a9a6ad";
			this.color3="#7D8093";
		}
		
		public void setNom(String nom){
			this.nom=nom;
		}
		
		public void setVida(){
			this.VIDA= tirarDaus(1,8)*this.finalCON;
		}
		
		public void setMana(){
			int mana= (this.finalINT + this.finalSAB)/2;
			mana = (int)Math.floor(mana);
			this.MANA=tirarDaus(1,4)*mana;
		}
		
		public void setArray(){
			for(int i =0; i<6; i++ ){
				this.punts[i]= this.tirarDaus(4);
			}
		}
		
		
		//Aquest mètode fa l'insert a la base de dades
		public boolean guardar(){
			return true;
		}
		

	}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.apache.jasper.tagplugins.jstl.core.If");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Generador Cartes de rol</title>\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\"/>\n");
      out.write("</head>\n");
      out.write("<style type=\"text/css\">\n");
      out.write(".tg  {border-collapse:collapse;border-spacing:0;}\n");
      out.write(".tg td{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n");
      out.write("  overflow:hidden;padding:10px 5px;word-break:normal;}\n");
      out.write(".tg th{border-color:black;border-style:solid;border-width:1px;font-family:Arial, sans-serif;font-size:14px;\n");
      out.write("  font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}\n");
      out.write(".tg .tg-da2z{border-color:inherit;font-family:\"Courier New\", Courier, monospace !important;font-weight:bold;text-align:left;\n");
      out.write("  vertical-align:top}\n");
      out.write(".tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top}\n");
      out.write(".tg .tg-zh46{border-color:inherit;font-family:\"Courier New\", Courier, monospace !important;text-align:left;vertical-align:top}\n");
      out.write("\n");
      out.write("\n");
      out.write("	@font-face {\n");
      out.write("	  font-family: titol;\n");
      out.write("	  src: url(fonts/titol.ttf);\n");
      out.write("	}\n");
      out.write("	body{\n");
      out.write("		background-image: url(\"img/fondo.jpg\");\n");
      out.write("		background-repeat: no-repeat;\n");
      out.write("  		background-size: cover;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	h1{\n");
      out.write("		font-family: titol;\n");
      out.write("		color:white;\n");
      out.write("		font-size: 55pt;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("	");
      out.write('\n');

Personatge pers;
if (request.getParameter("clase") == null){
	pers = new Personatge();
}
else{
	int clase = Integer.parseInt(request.getParameter("clase"));
	if(clase>0 && clase <= 6){
		pers = new Personatge(clase);
	}
	else{
		pers = new Personatge();
	}
} 
pers.setArray();

      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("	<form action=\"\">\n");
      out.write("		<div\n");
      out.write("			style=\"width: 60%; background-color:");
out.println(pers.color1);
      out.write(";padding:1%; opacity:0.9; border-collapse:separate;border-spacing: 10;border:solid black 1px;border-radius:10px;-moz-border-radius:10px;-webkit-border-radius: 5px; \">\n");
      out.write("			<h1 style=\"text-align: center;\">\n");
      out.write("				");

				out.println(pers.classe);
				
      out.write("\n");
      out.write("			</h1>\n");
      out.write("			<table\n");
      out.write("				style=\"width: 100%; height:10%; opacity:1; background-color:");
out.println(pers.color2);
      out.write("\"\n");
      out.write("				class=\"tg\">\n");
      out.write("				</tbody>\n");
      out.write("				<tr>\n");
      out.write("					<td\n");
      out.write("						style=\"width: 40%;background-color:");
out.println(pers.color3);
      out.write("\"\n");
      out.write("						class=\"tg-0lax\" rowspan=\"8\"><img style=\"width: 100%;\"\n");
      out.write("						src=\"img/");
out.println(pers.imatge);
      out.write("\" alt=\"Caràcter\"></td>\n");
      out.write("					<td class=\"tg-ucee\">Característiques</td>\n");
      out.write("					<td class=\"tg-ucee\">Valor Base</td>\n");
      out.write("					<td class=\"tg-ucee\">Modificadors</td>\n");
      out.write("					<td class=\"tg-ucee\">Valor final</td>\n");
      out.write("				</tr>\n");
      out.write("\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"tg-fgy3\">Força:</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						<select name=\"fue\" id=\"dropdown\">\n");
      out.write("							<option>");
 out.print(pers.punts[0]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[1]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[2]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[3]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[4]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[5]); 
      out.write("</option>\n");
      out.write("						</select>\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						if (pers.classe == "SemiOrc")
							out.print("+2");
						else if (pers.classe == "Gnom" || pers.classe == "Mitjà")
							out.print("-2");
						else
							out.print("+0");
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						out.println(pers.finalFUE);
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"tg-fgy3\">Habilitat:</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						<select name=\"fue\" id=\"dropdown\">\n");
      out.write("							<option>");
 out.print(pers.punts[0]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[1]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[2]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[3]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[4]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[5]); 
      out.write("</option>\n");
      out.write("						</select>\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						if (pers.classe == "Elf" || pers.classe == "Mitjà")
							out.print("+2");
						else
							out.print("+0");
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						out.println(pers.finalDES);
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"tg-fgy3\">Constitució:</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						<select name=\"fue\" id=\"dropdown\">\n");
      out.write("							<option>");
 out.print(pers.punts[0]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[1]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[2]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[3]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[4]); 
      out.write("</option>\n");
      out.write("							<option>");
 out.print(pers.punts[5]); 
      out.write("</option>\n");
      out.write("						</select>\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						if (pers.classe == "Nan" || pers.classe == "Gnom")
							out.print("+2");
						else if (pers.classe == "Elf")
							out.print("-2");
						else
							out.print("+0");
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						out.println(pers.finalCON);
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"tg-fgy3\">Inteligència:</td>\n");
      out.write("					<td class=\"tg-fgy3\"></td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("					\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"tg-fgy3\">Sabiduria:</td>\n");
      out.write("					<td class=\"tg-fgy3\"></td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

					
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"tg-fgy3\">Carisma:</td>\n");
      out.write("					<td class=\"tg-fgy3\"></td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-fgy3\">\n");
      out.write("						");

						
						
      out.write("\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"tg-fgy3\">Vida: (");

      out.write("/160)\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-0lax\" colspan=\"3\">\n");
      out.write("						<div syle=\"width:100%;\" class=\"progress\">\n");
      out.write("							<progress class=\"vida\" id=\"vida\" max=\"160\"\n");
      out.write("								style=\"background-color: ");

      out.write(" !important; border-color: ");

      out.write(";\"\n");
      out.write("								value=\"");

      out.write("\"></progress>\n");
      out.write("						</div>\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				<tr>\n");
      out.write("					<td>Nom: <input type=\"text\" id=\"nom\" name=\"nom\"></td>\n");
      out.write("					<td class=\"tg-fgy3\">Maná:(");

      out.write("/80)\n");
      out.write("					</td>\n");
      out.write("					<td class=\"tg-0lax\" colspan=\"3\">\n");
      out.write("						<div syle=\"width:100%;\" class=\"progress\">\n");
      out.write("							<progress class=\"mana\" id=\"vida\" max=\"80\"\n");
      out.write("								style=\"background-color: ");

      out.write(" !important; border-color: ");

      out.write(";\"\n");
      out.write("								value=\"");

      out.write("\"></progress>\n");
      out.write("						</div>\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("				</tbody>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("	</form>\n");
      out.write("\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
